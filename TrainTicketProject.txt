Train Ticket project


TrainDAO.java
package trainpack;

import ticketpack.Ticket;

import java.sql.*;

public class TrainDAO {
    public static Connection con;
    //String str="insert into ticket values(?,?)";
    String pnr;
    public static Connection getConnection() {
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/traindatabase", "root", "Aishwarya@123");


        } catch (SQLException e) {
            e.printStackTrace();
        }
        return con;
    }

        public Train findtrain(int TRAIN_NO)
    {
        Train train=null;
        try{
            con= DriverManager.getConnection("jdbc:mysql://localhost:3306/traindatabase","root","Aishwarya@123");
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("select * from trains where TRAIN_NO="+TRAIN_NO);
            while ((rs.next()))
            {
                train=new Train(rs.getInt(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getInt(5));

            }



        } catch (SQLException e) {

            System.out.println("train no. not found");
        }
        return train;
    }


}

Train.java
package trainpack;

public class Train {
    private int TRAIN_NO;
    private String TRAIN_NAME;
    private  String  SOURCE;
    private String DESTINATION;
    private double TICKET_PRICE;

    public Train(int TRAIN_NO, String TRAIN_NAME, String SOURCE,String DESTINATION, double TICKET_PRICE) {
        this.TRAIN_NO = TRAIN_NO;
        this.TRAIN_NAME = TRAIN_NAME;
        this.SOURCE = SOURCE;
        this.DESTINATION = DESTINATION;
        this.TICKET_PRICE = TICKET_PRICE;
    }

    public int getTRAIN_NO() {
        return TRAIN_NO;
    }

    public String getTRAIN_NAME() {
        return TRAIN_NAME;
    }

    public String getSOURCE() {
        return SOURCE;
    }

    public String getDESTINATION() {
        return DESTINATION;
    }

    public double getTICKET_PRICE() {
        return TICKET_PRICE;
    }
}

Passenger.java

package passengerpack;

public class Passenger {
    private String name;
    private  int age;
    private  char gender;

    public Passenger(String name, int age, char gender) {
        this.name = name;
        this.age = age;
        this.gender = gender;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public char getGender() {
        return gender;
    }

    public void setGender(char gender) {
        this.gender = gender;
    }


}

Ticket.java
package ticketpack;

import passengerpack.Passenger;
import trainpack.Train;
import trainpack.TrainDAO;

import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.TreeMap;
public class Ticket {
    private int count=100;
    private  String pnr=null;
    private String traveldate;
    private Map<Passenger, Double> passenger=new HashMap<>();
    private Train train;
    public Ticket(String traveldate, Train train) {
        this.traveldate = traveldate;
        this.train = train;
        generatePNR();
    }
    private String generatePNR(){
        //count=TrainDAO.getcount();
        char s= train.getSOURCE().charAt(0);
        char d= train.getDESTINATION().charAt(0);
        String[] date1 = traveldate.toString().split("-");
        pnr = s+""+d+"_"+date1[2]+date1[1]+date1[0]+"_"+count++;
        //count++;
        return pnr;
    }
    private double calcPassengerFare(Passenger p){
        double price= train.getTICKET_PRICE();
        if(p.getAge()<=12)
            price *=0.5;
        else
        if(p.getAge()>=60)
            price *=0.6;
        else
        if(p.getGender()=='F')
            price *=0.75;
        passenger.put(p,price);
        return price;
    }
    public void addPassenger(String name,int age,char gender){
        Passenger p = new Passenger(name,age,gender);
        calcPassengerFare(p);
    }
    private double calcTotalTicketPrice(){
        double totamt=0;

        for(double p:passenger.values())
            totamt+=p;
        PreparedStatement ps=null;
        Connection con= TrainDAO.getConnection();
        String str="insert into ticket values(?,?)";
        try {
            ps = con.prepareStatement(str);
            ps.setString(1,pnr);
            ps.setDouble(2, totamt);
            ps.executeUpdate();

        }catch(SQLException e){
            e.printStackTrace();
        }

        return totamt;
    }


    private StringBuilder generateTicket(){
        StringBuilder s=new StringBuilder();
        s.append("PNR: "+getPnr()+'\n');
        s.append(System.getProperty("line.separator"));
        s.append("TRAIN_NO.: "+train.getTRAIN_NO()+"\n");
        s.append(System.lineSeparator());
        s.append("TRAIN_NAME: "+train.getTRAIN_NAME()+ "\n");
        s.append(System.lineSeparator());
        s.append("FROM: "+train.getSOURCE()+"\n");
        s.append(System.lineSeparator());
        s.append("TO: "+train.getDESTINATION()+"\n");
        s.append(System.lineSeparator());
        s.append("TRAVEL DATE: "+traveldate+"\n");
        s.append(System.lineSeparator());
        s.append(" \nPASSENGERS \n");
        s.append(System.lineSeparator());
        s.append("Name      age     gender      fare \n");
        s.append(System.lineSeparator());
        for(Passenger p:passenger.keySet()) {
            s.append(p.getName()+"      "+p.getAge()+"      "+p.getGender()+"       "+passenger.get(p));
            s.append(System.lineSeparator());
        }

        s.append("Total Price: "+calcTotalTicketPrice());


        return s;
    }

    public void writeTicket(){
        try {
            FileWriter myWriter = new FileWriter("C:\\Users\\user115\\Desktop\\"+getPnr()+".txt");
            myWriter.write(String.valueOf(generateTicket()));
            myWriter.close();
            System.out.println("Successfully wrote to the file.");
        } catch (IOException e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }
    }
    public String getPnr() {
        return pnr;
    }

    public String getTraveldate() {
        return traveldate;
    }

    public Map<Passenger, Double> getPassengers() {
        return passenger;
    }

    public Train getTrain() {
        return train;

    }

    public void setCount(int count) {
        this.count = count++;
    }

    public void setPnr(String pnr) {
        this.pnr = pnr;
    }

    public void setTrain(Train train) {
        this.train = train;
    }
}

Main.java
package ticketpack;

import passengerpack.Passenger;
import trainpack.Train;
import trainpack.TrainDAO;

import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.TreeMap;
public class Ticket {
    private int count=100;
    private  String pnr=null;
    private String traveldate;
    private Map<Passenger, Double> passenger=new HashMap<>();
    private Train train;
    public Ticket(String traveldate, Train train) {
        this.traveldate = traveldate;
        this.train = train;
        generatePNR();
    }
    private String generatePNR(){
        //count=TrainDAO.getcount();
        char s= train.getSOURCE().charAt(0);
        char d= train.getDESTINATION().charAt(0);
        String[] date1 = traveldate.toString().split("-");
        pnr = s+""+d+"_"+date1[2]+date1[1]+date1[0]+"_"+count++;
        //count++;
        return pnr;
    }
    private double calcPassengerFare(Passenger p){
        double price= train.getTICKET_PRICE();
        if(p.getAge()<=12)
            price *=0.5;
        else
        if(p.getAge()>=60)
            price *=0.6;
        else
        if(p.getGender()=='F')
            price *=0.75;
        passenger.put(p,price);
        return price;
    }
    public void addPassenger(String name,int age,char gender){
        Passenger p = new Passenger(name,age,gender);
        calcPassengerFare(p);
    }
    private double calcTotalTicketPrice(){
        double totamt=0;

        for(double p:passenger.values())
            totamt+=p;
        PreparedStatement ps=null;
        Connection con= TrainDAO.getConnection();
        String str="insert into ticket values(?,?)";
        try {
            ps = con.prepareStatement(str);
            ps.setString(1,pnr);
            ps.setDouble(2, totamt);
            ps.executeUpdate();

        }catch(SQLException e){
            e.printStackTrace();
        }

        return totamt;
    }


    private StringBuilder generateTicket(){
        StringBuilder s=new StringBuilder();
        s.append("PNR: "+getPnr()+'\n');
        s.append(System.getProperty("line.separator"));
        s.append("TRAIN_NO.: "+train.getTRAIN_NO()+"\n");
        s.append(System.lineSeparator());
        s.append("TRAIN_NAME: "+train.getTRAIN_NAME()+ "\n");
        s.append(System.lineSeparator());
        s.append("FROM: "+train.getSOURCE()+"\n");
        s.append(System.lineSeparator());
        s.append("TO: "+train.getDESTINATION()+"\n");
        s.append(System.lineSeparator());
        s.append("TRAVEL DATE: "+traveldate+"\n");
        s.append(System.lineSeparator());
        s.append(" \nPASSENGERS \n");
        s.append(System.lineSeparator());
        s.append("Name      age     gender      fare \n");
        s.append(System.lineSeparator());
        for(Passenger p:passenger.keySet()) {
            s.append(p.getName()+"      "+p.getAge()+"      "+p.getGender()+"       "+passenger.get(p));
            s.append(System.lineSeparator());
        }

        s.append("Total Price: "+calcTotalTicketPrice());


        return s;
    }

    public void writeTicket(){
        try {
            FileWriter myWriter = new FileWriter("C:\\Users\\user115\\Desktop\\"+getPnr()+".txt");
            myWriter.write(String.valueOf(generateTicket()));
            myWriter.close();
            System.out.println("Successfully wrote to the file.");
        } catch (IOException e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }
    }
    public String getPnr() {
        return pnr;
    }

    public String getTraveldate() {
        return traveldate;
    }

    public Map<Passenger, Double> getPassengers() {
        return passenger;
    }

    public Train getTrain() {
        return train;

    }

    public void setCount(int count) {
        this.count = count++;
    }

    public void setPnr(String pnr) {
        this.pnr = pnr;
    }

    public void setTrain(Train train) {
        this.train = train;
    }
}

Output:
enter train number
1004
enter the date(dd-mm-yyyy)
4-5-6000
Enter no. of passengers:
2
Enter passenger details:
c
34
Enter F for Female  Enter M for Male
M
Enter passenger details:
n
45
Enter F for Female  Enter M for Male
M
Successfully wrote to the file.


enter train number
1007
Train not found......





